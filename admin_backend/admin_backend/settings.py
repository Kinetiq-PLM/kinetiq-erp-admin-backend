"""
Django settings for admin_backend project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-fr$c(xhti7b44ov4zikf^0*=h$lrxkk5*k&x@0g@28#s3618f9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ["127.0.0.1", 
#                  "localhost", 
#                  "7lthyploub.execute-api.ap-southeast-1.amazonaws.com"]

ALLOWED_HOSTS = ["7lthyploub.execute-api.ap-southeast-1.amazonaws.com"]

AWS_STORAGE_BUCKET_NAME = 'your-bucket-name'  # Replace with your actual bucket name
AWS_REGION = 'ap-southeast-1'  # This matches the region in your API URL

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',

    "rest_framework",
    "corsheaders",    
    "django_cognito_jwt",
    'widget_tweaks',

    'login',
    'audit_log',
    "user_manage",
    "item_master_list",
    "business_partner_master_list",
    "warehouse",
    "policies",
    "currency",
    "notifications",

    'django_celery_beat',  # For scheduling tasks
]

# Media settings for file uploads
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
]

# # Allow requests from React frontend
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8000",  # Adjust this React apps URL
# ]

# CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOWED_ORIGINS = ["https://d2dhcd346f3g6s.cloudfront.net", "http://kinetiq-shell-app.s3-website-ap-southeast-1.amazonaws.com"]

CORS_ALLOW_CREDENTIALS = True


# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAuthenticated',
#     ),
# }

REST_FRAMEWORK = {
    'DEFAULT-PERMISSION-CLASSES': (
        'rest_framework.permission.AllowAny'
    ),
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "django_cognito_jwt.JSONWebTokenAuthentication",
    ),
}

# from datetime import timedelta

# SIMPLE_JWT = {
#     'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),
#     'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
#     'ROTATE_REFRESH_TOKENS': False,
#     'BLACKLIST_AFTER_ROTATION': True,
#     'ALGORITHM': 'HS256',
#     'SIGNING_KEY': SECRET_KEY,
#     'VERIFYING_KEY': None,
#     'AUTH_HEADER_TYPES': ('Bearer',),
#     'USER_ID_FIELD': 'id',
#     'USER_ID_CLAIM': 'user_id',
#     'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
#     'TOKEN_TYPE_CLAIM': 'token_type',
# }

# AUTH_USER_MODEL = 'login.User'

ROOT_URLCONF = 'admin_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'admin_backend.wsgi.application'

# AWS_COGNITO_SETTINGS = {
#     'REGION': 'us-east-1',  # Your AWS region
#     'USER_POOL_ID': 'us-east-1_xxxxxxxx',  # Your User Pool ID
#     'APP_CLIENT_ID': 'your-app-client-id',  # Your App Client ID
#     'APP_CLIENT_SECRET': 'your-app-client-secret',  # Your App Client Secret (if applicable)
#     'DOMAIN': 'your-domain.auth.us-east-1.amazoncognito.com',  # Your Cognito domain
#     'REDIRECT_URI': 'https://your-domain.com/auth/callback/',  # Callback URL after authentication
# }


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'Kinetiq-DB-Schema',
#         'USER': 'postgres',
#         'PASSWORD': 'admindatabase',
#         'HOST': 'localhost',
#         'PORT': '5432',       # default PostgreSQL port
#         # 'OPTIONS': {
#         #     'options': '-c search_path=admin,public'
#         # },
#     }
# }

import os
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'Kinetiq-DB'),
        'USER': os.getenv('DB_USER', 'postgres'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'KntBg3jIY0DbpH8G9bwt'),
        'HOST': os.getenv('DB_HOST', '127.0.0.1'),
        'PORT': os.getenv('DB_PORT', '15432'),
        # 'OPTIONS': {
        #     'options': '-c search_path=admin,public'
        # },
    }
}



CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Default Redis port and db 0
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC+08:00'  # Using your project's timezone setting

# Celery Configuration
from celery.schedules import crontab

CELERY_BEAT_SCHEDULE = {
    'update-exchange-rates-daily': {
        'task': 'currency.tasks.update_exchange_rates_task',
        'schedule': crontab(hour=0, minute=0),  # Run at midnight every day
        # Alternatively: 'schedule': timedelta(days=1),
    },
}
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
